{"ast":null,"code":"var _jsxFileName = \"/home/pantero/Code/Challenges/PostLight/EmpDir-Client/client/src/components/AddEmployee.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Form, Button, Dropdown } from \"react-bootstrap\";\nimport \"./AddEmployee.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEmployee = () => {\n  _s();\n\n  const [form, setForm] = useState({});\n\n  const setFormField = (field, value) => {\n    setForm({ ...form,\n      [field]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // get our new errors\n\n    const newErrors = findFormErrors(); // Conditional logic:\n\n    if (Object.keys(newErrors).length > 0) {\n      // We got errors!\n      setErrors(newErrors);\n    } else {\n      // No errors! Put any logic here for the form submission!\n      alert(\"Thank you for your feedback!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-employee\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"FirstName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: e => setFormField(\"first_name\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"LastName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: e => setFormField(\"last_name\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"Name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: e => setFormField(\"phone\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"Name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: e => setFormField(\"department\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"Name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Picture URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: e => setFormField(\"picture\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEmployee, \"vOzvWZDsoCRExenMJTZow4WC08Q=\");\n\n_c = AddEmployee;\nexport default AddEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEmployee\");","map":{"version":3,"sources":["/home/pantero/Code/Challenges/PostLight/EmpDir-Client/client/src/components/AddEmployee.js"],"names":["useState","Form","Button","Dropdown","AddEmployee","form","setForm","setFormField","field","value","handleSubmit","e","preventDefault","newErrors","findFormErrors","Object","keys","length","setErrors","alert","target"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Form, Button, Dropdown } from \"react-bootstrap\";\nimport \"./AddEmployee.css\";\n\nconst AddEmployee = () => {\n  const [form, setForm] = useState({});\n  const setFormField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    // Conditional logic:\n    if (Object.keys(newErrors).length > 0) {\n      // We got errors!\n      setErrors(newErrors);\n    } else {\n      // No errors! Put any logic here for the form submission!\n      alert(\"Thank you for your feedback!\");\n    }\n  };\n  return (\n    <div className=\"add-employee\">\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"FirstName\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={(e) => setFormField(\"first_name\", e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"LastName\">\n          <Form.Label>Last Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={(e) => setFormField(\"last_name\", e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"Name\">\n          <Form.Label>Phone</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={(e) => setFormField(\"phone\", e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"Name\">\n          <Form.Label>Department</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={(e) => setFormField(\"department\", e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"Name\">\n          <Form.Label>Picture URL</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={(e) => setFormField(\"picture\", e.target.value)}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddEmployee;\n"]},"metadata":{},"sourceType":"module"}