{"ast":null,"code":"var _jsxFileName = \"/home/pantero/Code/Challenges/PostLight/EmpDir-Client/client/src/components/AddEmployee.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./AddEmployee.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:3100/employee\";\n\nconst AddEmployee = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-employee\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"first_name\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-control\",\n          name: \"first_name\",\n          autoComplete: \"off\",\n          ...register(\"first_name\", {\n            required: \"Required\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), errors.message && errors.message.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEmployee, \"HLC1IFclXfL/K+q6lxeDS/Po7Wk=\", false, function () {\n  return [useForm];\n});\n\n_c = AddEmployee;\nexport default AddEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEmployee\");","map":{"version":3,"sources":["/home/pantero/Code/Challenges/PostLight/EmpDir-Client/client/src/components/AddEmployee.js"],"names":["React","useForm","url","AddEmployee","register","handleSubmit","formState","errors","onSubmit","values","console","log","required","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,mBAAP;;AAEA,MAAMC,GAAG,GAAG,gCAAZ;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIFN,OAAO,EAJX;;AAMA,QAAMO,QAAQ,GAAIC,MAAD,IAAY;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEJ,YAAY,CAACG,QAAD,CAA5B;AAAA,8BACE;AAAO,QAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AACE,UAAA,KAAK,EAAC,cADR;AAEE,UAAA,IAAI,EAAC,YAFP;AAGE,UAAA,YAAY,EAAC,KAHf;AAAA,aAIMJ,QAAQ,CAAC,YAAD,EAAe;AACzBQ,YAAAA,QAAQ,EAAE;AADe,WAAf;AAJd;AAAA;AAAA;AAAA;AAAA,gBADF,EASGL,MAAM,CAACM,OAAP,IAAkBN,MAAM,CAACM,OAAP,CAAeA,OATpC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAlCD;;GAAMV,W;UAKAF,O;;;KALAE,W;AAmCN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./AddEmployee.css\";\n\nconst url = \"http://localhost:3100/employee\";\n\nconst AddEmployee = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <div className=\"add-employee\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label for=\"first_name\">First Name</label>\n        <div className=\"input-group mb-3\">\n          <input\n            class=\"form-control\"\n            name=\"first_name\"\n            autoComplete=\"off\"\n            {...register(\"first_name\", {\n              required: \"Required\",\n            })}\n          />\n          {errors.message && errors.message.message}\n        </div>\n        <div className=\"form-group\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Register\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default AddEmployee;\n"]},"metadata":{},"sourceType":"module"}