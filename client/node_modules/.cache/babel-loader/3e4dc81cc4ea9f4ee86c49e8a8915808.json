{"ast":null,"code":"var _jsxFileName = \"/home/pantero/Code/Challenges/PostLight/EmpDir-Client/client/src/components/DashBoard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./DashBoard.css\";\nimport SearchBar from \"./SearchBar\";\nimport EmployeeList from \"./EmployeeList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashBoard = () => {\n  _s();\n\n  const [employees, setEmployees] = useState([]);\n  const [filteredEmployees, setFilteredEmployees] = useState([]);\n  const [searchTerm, setSearchTerm] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const url = process.env.EMPDIR_API_URL || \"http://localhost:3100/employee\";\n    fetch(url).then(res => res.json()).then(result => {\n      setEmployees(result);\n      setFilteredEmployees(result);\n    }, error => {\n      setError(error);\n    });\n  }, []);\n  useEffect(() => {\n    const re = new RegExp(`^${searchTerm}`, \"i\");\n    const filteredFirst = employees.filter(employee => re.test(employee.first_name));\n    const filteredLast = employees.filter(employee => re.test(employee.last_name));\n    const filteredFull = [...filteredFirst, ...filteredLast];\n    if (searchTerm.length > 0) setFilteredEmployees(filteredFull);else {\n      setFilteredEmployees(employees);\n    }\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      passSearch: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeList, {\n      employees: filteredEmployees,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashBoard, \"wcD3CX4RaaUibc9QBNoFJO+DNBQ=\");\n\n_c = DashBoard;\nexport default DashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"sources":["/home/pantero/Code/Challenges/PostLight/EmpDir-Client/client/src/components/DashBoard.js"],"names":["useState","useEffect","SearchBar","EmployeeList","DashBoard","employees","setEmployees","filteredEmployees","setFilteredEmployees","searchTerm","setSearchTerm","error","setError","url","process","env","EMPDIR_API_URL","fetch","then","res","json","result","re","RegExp","filteredFirst","filter","employee","test","first_name","filteredLast","last_name","filteredFull","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,iBAAD,EAAoBC,oBAApB,IAA4CR,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,cAAZ,IAA8B,gCAA1C;AACAC,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACGK,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVf,MAAAA,YAAY,CAACe,MAAD,CAAZ;AACAb,MAAAA,oBAAoB,CAACa,MAAD,CAApB;AACD,KANL,EAOKV,KAAD,IAAW;AACTC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KATL;AAWD,GAbQ,EAaN,EAbM,CAAT;AAeAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,EAAE,GAAG,IAAIC,MAAJ,CAAY,IAAGd,UAAW,EAA1B,EAA6B,GAA7B,CAAX;AACA,UAAMe,aAAa,GAAGnB,SAAS,CAACoB,MAAV,CAAkBC,QAAD,IACrCJ,EAAE,CAACK,IAAH,CAAQD,QAAQ,CAACE,UAAjB,CADoB,CAAtB;AAGA,UAAMC,YAAY,GAAGxB,SAAS,CAACoB,MAAV,CAAkBC,QAAD,IACpCJ,EAAE,CAACK,IAAH,CAAQD,QAAQ,CAACI,SAAjB,CADmB,CAArB;AAGA,UAAMC,YAAY,GAAG,CAAC,GAAGP,aAAJ,EAAmB,GAAGK,YAAtB,CAArB;AACA,QAAIpB,UAAU,CAACuB,MAAX,GAAoB,CAAxB,EAA2BxB,oBAAoB,CAACuB,YAAD,CAApB,CAA3B,KACK;AACHvB,MAAAA,oBAAoB,CAACH,SAAD,CAApB;AACD;AACF,GAbQ,EAaN,CAACI,UAAD,CAbM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAEH,iBAAzB;AAA4C,MAAA,KAAK,EAAEI;AAAnD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA1CD;;GAAMP,S;;KAAAA,S;AA4CN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./DashBoard.css\";\nimport SearchBar from \"./SearchBar\";\nimport EmployeeList from \"./EmployeeList\";\n\nconst DashBoard = () => {\n  const [employees, setEmployees] = useState([]);\n  const [filteredEmployees, setFilteredEmployees] = useState([]);\n  const [searchTerm, setSearchTerm] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const url = process.env.EMPDIR_API_URL || \"http://localhost:3100/employee\";\n    fetch(url)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setEmployees(result);\n          setFilteredEmployees(result);\n        },\n        (error) => {\n          setError(error);\n        }\n      );\n  }, []);\n\n  useEffect(() => {\n    const re = new RegExp(`^${searchTerm}`, \"i\");\n    const filteredFirst = employees.filter((employee) =>\n      re.test(employee.first_name)\n    );\n    const filteredLast = employees.filter((employee) =>\n      re.test(employee.last_name)\n    );\n    const filteredFull = [...filteredFirst, ...filteredLast];\n    if (searchTerm.length > 0) setFilteredEmployees(filteredFull);\n    else {\n      setFilteredEmployees(employees);\n    }\n  }, [searchTerm]);\n\n  return (\n    <div className=\"dashboard\">\n      <SearchBar passSearch={setSearchTerm} />\n      <EmployeeList employees={filteredEmployees} error={error} />\n    </div>\n  );\n};\n\nexport default DashBoard;\n"]},"metadata":{},"sourceType":"module"}