{"ast":null,"code":"var _jsxFileName = \"/home/pantero/Code/Challenges/PostLight/EmpDir-Client/client/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport debounce from \"../helpers/debounce\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = () => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n\n  const handleChange = e => {\n    debounce(e => {\n      setSearch(e.target.value);\n    }, 200);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for name\",\n      value: search,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"42GASUL8pX2/N6Oh5HTh0GvQEF0=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/pantero/Code/Challenges/PostLight/EmpDir-Client/client/src/components/SearchBar.js"],"names":["useState","debounce","SearchBar","search","setSearch","handleChange","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BL,IAAAA,QAAQ,CAAEK,CAAD,IAAO;AACdF,MAAAA,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,KAFO,EAEL,GAFK,CAAR;AAGD,GAJD;;AAMA,sBACE;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,KAAK,EAAEL,MAHT;AAIE,MAAA,QAAQ,EAAEE;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnBD;;GAAMH,S;;KAAAA,S;AAqBN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\nimport debounce from \"../helpers/debounce\";\n\nconst SearchBar = () => {\n  const [search, setSearch] = useState(\"\");\n\n  const handleChange = (e) => {\n    debounce((e) => {\n      setSearch(e.target.value);\n    }, 200);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search for name\"\n        value={search}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}