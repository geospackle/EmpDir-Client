{"ast":null,"code":"var _jsxFileName = \"/home/pantero/Code/Challenges/PostLight/EmpDir-Client/client/src/components/DashBoard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./DashBoard.css\";\nimport SearchBar from \"./SearchBar\";\nimport EmployeeList from \"./EmployeeList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashBoard = () => {\n  _s();\n\n  const [employees, setEmployees] = useState([]);\n  const [searchTerm, setSearchTerm] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log(\"mounted\");\n    const url = \"https://randomuser.me/api/?results=100\";\n    fetch(url).then(res => res.json()).then(result => {\n      console.log(result);\n      setEmployees(result.results);\n    }, error => {\n      setError(error);\n    });\n  }, []);\n  useEffect(() => {\n    const filtered = employees.filter(employee => employee.match(`/${searchTerm}/gi`));\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      passSearch: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeList, {\n      employees: employees,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashBoard, \"Uco0z69sIOfUSDod+j5ok1IauFU=\");\n\n_c = DashBoard;\nexport default DashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"sources":["/home/pantero/Code/Challenges/PostLight/EmpDir-Client/client/src/components/DashBoard.js"],"names":["useState","useEffect","SearchBar","EmployeeList","DashBoard","employees","setEmployees","searchTerm","setSearchTerm","error","setError","console","log","url","fetch","then","res","json","result","results","filtered","filter","employee","match"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,UAAMC,GAAG,GAAG,wCAAZ;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVP,MAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACAZ,MAAAA,YAAY,CAACY,MAAM,CAACC,OAAR,CAAZ;AACD,KANL,EAOKV,KAAD,IAAW;AACTC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KATL;AAWD,GAdQ,EAcN,EAdM,CAAT;AAgBAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,QAAQ,GAAGf,SAAS,CAACgB,MAAV,CAAkBC,QAAD,IAChCA,QAAQ,CAACC,KAAT,CAAgB,IAAGhB,UAAW,KAA9B,CADe,CAAjB;AAGD,GAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAEH,SAAzB;AAAoC,MAAA,KAAK,EAAEI;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjCD;;GAAML,S;;KAAAA,S;AAmCN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./DashBoard.css\";\nimport SearchBar from \"./SearchBar\";\nimport EmployeeList from \"./EmployeeList\";\n\nconst DashBoard = () => {\n  const [employees, setEmployees] = useState([]);\n  const [searchTerm, setSearchTerm] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    console.log(\"mounted\");\n    const url = \"https://randomuser.me/api/?results=100\";\n    fetch(url)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          setEmployees(result.results);\n        },\n        (error) => {\n          setError(error);\n        }\n      );\n  }, []);\n\n  useEffect(() => {\n    const filtered = employees.filter((employee) =>\n      employee.match(`/${searchTerm}/gi`)\n    );\n  }, [searchTerm]);\n\n  return (\n    <div className=\"dashboard\">\n      <SearchBar passSearch={setSearchTerm} />\n      <EmployeeList employees={employees} error={error} />\n    </div>\n  );\n};\n\nexport default DashBoard;\n"]},"metadata":{},"sourceType":"module"}